// Mocks generated by Mockito 5.4.4 from annotations
// in msa_assessment/test/services/platform_services/locat_storage_service/local_storage_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:msa_assessment/database/database_helper.dart' as _i6;
import 'package:msa_assessment/model/transaction_model.dart' as _i3;
import 'package:msa_assessment/utils/utlils.dart' as _i5;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_1 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Expense].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpense extends _i1.Mock implements _i3.Expense {
  MockExpense() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  set userID(String? _userID) => super.noSuchMethod(
        Invocation.setter(
          #userID,
          _userID,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ExpenseCategory get category => (super.noSuchMethod(
        Invocation.getter(#category),
        returnValue: _i5.ExpenseCategory.food,
      ) as _i5.ExpenseCategory);

  @override
  set category(_i5.ExpenseCategory? _category) => super.noSuchMethod(
        Invocation.setter(
          #category,
          _category,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get amount => (super.noSuchMethod(
        Invocation.getter(#amount),
        returnValue: 0.0,
      ) as double);

  @override
  set amount(double? _amount) => super.noSuchMethod(
        Invocation.setter(
          #amount,
          _amount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#createdAt),
        ),
      ) as DateTime);

  @override
  set createdAt(DateTime? _createdAt) => super.noSuchMethod(
        Invocation.setter(
          #createdAt,
          _createdAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set description(String? _description) => super.noSuchMethod(
        Invocation.setter(
          #description,
          _description,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get isDeleted => (super.noSuchMethod(
        Invocation.getter(#isDeleted),
        returnValue: 0,
      ) as int);

  @override
  set isDeleted(int? _isDeleted) => super.noSuchMethod(
        Invocation.setter(
          #isDeleted,
          _isDeleted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i6.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.Future<_i2.Database>.value(_FakeDatabase_1(
          this,
          Invocation.getter(#database),
        )),
      ) as _i7.Future<_i2.Database>);

  @override
  _i7.Future<_i2.Database> getDatabase() => (super.noSuchMethod(
        Invocation.method(
          #getDatabase,
          [],
        ),
        returnValue: _i7.Future<_i2.Database>.value(_FakeDatabase_1(
          this,
          Invocation.method(
            #getDatabase,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Database>);
}
